// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>
#include <RcppArmadillo.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true> &Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false> &Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// sem_likelihood_calculate
SEXP sem_likelihood_calculate(
    double alpha, double phi_0, double err_var, const arma::vec &dep_vars,
    const arma::mat &Y1, const arma::mat &Y2, const arma::mat &cur_Z,
    Rcpp::Nullable<arma::mat> cur_Y2, Rcpp::Nullable<arma::vec> beta,
    Rcpp::Nullable<arma::vec> phi_1, Rcpp::Nullable<arma::vec> phis,
    Rcpp::Nullable<arma::vec> psis, bool per_entity, bool exact_value);
RcppExport SEXP _bdsm_sem_likelihood_calculate(
    SEXP alphaSEXP, SEXP phi_0SEXP, SEXP err_varSEXP, SEXP dep_varsSEXP,
    SEXP Y1SEXP, SEXP Y2SEXP, SEXP cur_ZSEXP, SEXP cur_Y2SEXP, SEXP betaSEXP,
    SEXP phi_1SEXP, SEXP phisSEXP, SEXP psisSEXP, SEXP per_entitySEXP,
    SEXP exact_valueSEXP) {
  BEGIN_RCPP
  Rcpp::RObject rcpp_result_gen;
  Rcpp::RNGScope rcpp_rngScope_gen;
  Rcpp::traits::input_parameter<double>::type alpha(alphaSEXP);
  Rcpp::traits::input_parameter<double>::type phi_0(phi_0SEXP);
  Rcpp::traits::input_parameter<double>::type err_var(err_varSEXP);
  Rcpp::traits::input_parameter<const arma::vec &>::type dep_vars(dep_varsSEXP);
  Rcpp::traits::input_parameter<const arma::mat &>::type Y1(Y1SEXP);
  Rcpp::traits::input_parameter<const arma::mat &>::type Y2(Y2SEXP);
  Rcpp::traits::input_parameter<const arma::mat &>::type cur_Z(cur_ZSEXP);
  Rcpp::traits::input_parameter<Rcpp::Nullable<arma::mat>>::type cur_Y2(
      cur_Y2SEXP);
  Rcpp::traits::input_parameter<Rcpp::Nullable<arma::vec>>::type beta(betaSEXP);
  Rcpp::traits::input_parameter<Rcpp::Nullable<arma::vec>>::type phi_1(
      phi_1SEXP);
  Rcpp::traits::input_parameter<Rcpp::Nullable<arma::vec>>::type phis(phisSEXP);
  Rcpp::traits::input_parameter<Rcpp::Nullable<arma::vec>>::type psis(psisSEXP);
  Rcpp::traits::input_parameter<bool>::type per_entity(per_entitySEXP);
  Rcpp::traits::input_parameter<bool>::type exact_value(exact_valueSEXP);
  rcpp_result_gen = Rcpp::wrap(sem_likelihood_calculate(
      alpha, phi_0, err_var, dep_vars, Y1, Y2, cur_Z, cur_Y2, beta, phi_1, phis,
      psis, per_entity, exact_value));
  return rcpp_result_gen;
  END_RCPP
}
// residual_maker_matrix
arma::mat residual_maker_matrix(const arma::mat &m);
RcppExport SEXP _bdsm_residual_maker_matrix(SEXP mSEXP) {
  BEGIN_RCPP
  Rcpp::RObject rcpp_result_gen;
  Rcpp::RNGScope rcpp_rngScope_gen;
  Rcpp::traits::input_parameter<const arma::mat &>::type m(mSEXP);
  rcpp_result_gen = Rcpp::wrap(residual_maker_matrix(m));
  return rcpp_result_gen;
  END_RCPP
}
// sem_B_matrix
Rcpp::List sem_B_matrix(double alpha, int periods_n,
                        Rcpp::Nullable<arma::vec> beta);
RcppExport SEXP _bdsm_sem_B_matrix(SEXP alphaSEXP, SEXP periods_nSEXP,
                                   SEXP betaSEXP) {
  BEGIN_RCPP
  Rcpp::RObject rcpp_result_gen;
  Rcpp::RNGScope rcpp_rngScope_gen;
  Rcpp::traits::input_parameter<double>::type alpha(alphaSEXP);
  Rcpp::traits::input_parameter<int>::type periods_n(periods_nSEXP);
  Rcpp::traits::input_parameter<Rcpp::Nullable<arma::vec>>::type beta(betaSEXP);
  rcpp_result_gen = Rcpp::wrap(sem_B_matrix(alpha, periods_n, beta));
  return rcpp_result_gen;
  END_RCPP
}
// sem_C_matrix
arma::mat sem_C_matrix(double alpha, double phi_0, int periods_n,
                       Rcpp::Nullable<arma::vec> beta,
                       Rcpp::Nullable<arma::vec> phi_1);
RcppExport SEXP _bdsm_sem_C_matrix(SEXP alphaSEXP, SEXP phi_0SEXP,
                                   SEXP periods_nSEXP, SEXP betaSEXP,
                                   SEXP phi_1SEXP) {
  BEGIN_RCPP
  Rcpp::RObject rcpp_result_gen;
  Rcpp::RNGScope rcpp_rngScope_gen;
  Rcpp::traits::input_parameter<double>::type alpha(alphaSEXP);
  Rcpp::traits::input_parameter<double>::type phi_0(phi_0SEXP);
  Rcpp::traits::input_parameter<int>::type periods_n(periods_nSEXP);
  Rcpp::traits::input_parameter<Rcpp::Nullable<arma::vec>>::type beta(betaSEXP);
  Rcpp::traits::input_parameter<Rcpp::Nullable<arma::vec>>::type phi_1(
      phi_1SEXP);
  rcpp_result_gen =
      Rcpp::wrap(sem_C_matrix(alpha, phi_0, periods_n, beta, phi_1));
  return rcpp_result_gen;
  END_RCPP
}
// sem_psi_matrix
arma::mat sem_psi_matrix(const arma::vec &psis, int timestamps_n,
                         int features_n);
RcppExport SEXP _bdsm_sem_psi_matrix(SEXP psisSEXP, SEXP timestamps_nSEXP,
                                     SEXP features_nSEXP) {
  BEGIN_RCPP
  Rcpp::RObject rcpp_result_gen;
  Rcpp::RNGScope rcpp_rngScope_gen;
  Rcpp::traits::input_parameter<const arma::vec &>::type psis(psisSEXP);
  Rcpp::traits::input_parameter<int>::type timestamps_n(timestamps_nSEXP);
  Rcpp::traits::input_parameter<int>::type features_n(features_nSEXP);
  rcpp_result_gen = Rcpp::wrap(sem_psi_matrix(psis, timestamps_n, features_n));
  return rcpp_result_gen;
  END_RCPP
}
// sem_sigma_matrix
Rcpp::List sem_sigma_matrix(double err_var, const arma::vec &dep_vars,
                            Rcpp::Nullable<arma::vec> phis,
                            Rcpp::Nullable<arma::vec> psis);
RcppExport SEXP _bdsm_sem_sigma_matrix(SEXP err_varSEXP, SEXP dep_varsSEXP,
                                       SEXP phisSEXP, SEXP psisSEXP) {
  BEGIN_RCPP
  Rcpp::RObject rcpp_result_gen;
  Rcpp::RNGScope rcpp_rngScope_gen;
  Rcpp::traits::input_parameter<double>::type err_var(err_varSEXP);
  Rcpp::traits::input_parameter<const arma::vec &>::type dep_vars(dep_varsSEXP);
  Rcpp::traits::input_parameter<Rcpp::Nullable<arma::vec>>::type phis(phisSEXP);
  Rcpp::traits::input_parameter<Rcpp::Nullable<arma::vec>>::type psis(psisSEXP);
  rcpp_result_gen = Rcpp::wrap(sem_sigma_matrix(err_var, dep_vars, phis, psis));
  return rcpp_result_gen;
  END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bdsm_sem_likelihood_calculate", (DL_FUNC)&_bdsm_sem_likelihood_calculate,
     14},
    {"_bdsm_residual_maker_matrix", (DL_FUNC)&_bdsm_residual_maker_matrix, 1},
    {"_bdsm_sem_B_matrix", (DL_FUNC)&_bdsm_sem_B_matrix, 3},
    {"_bdsm_sem_C_matrix", (DL_FUNC)&_bdsm_sem_C_matrix, 5},
    {"_bdsm_sem_psi_matrix", (DL_FUNC)&_bdsm_sem_psi_matrix, 3},
    {"_bdsm_sem_sigma_matrix", (DL_FUNC)&_bdsm_sem_sigma_matrix, 4},
    {NULL, NULL, 0}};

RcppExport void R_init_bdsm(DllInfo *dll) {
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
}
